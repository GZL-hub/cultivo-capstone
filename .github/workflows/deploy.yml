name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: asia-southeast1
  SERVICE_NAME: cultivo-capstone
  AR_REPOSITORY: cloud-run-source-deploy
  AR_HOSTNAME: asia-southeast1-docker.pkg.dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    # Use the updated auth action for better authentication handling
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
    
    # Set up the Cloud SDK with the authenticated credentials
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
      
    # Explicitly configure Docker auth
    - name: Authorize Docker push
      run: gcloud auth configure-docker ${{ env.AR_HOSTNAME }} --quiet
      
    # Debug step to verify API key - Change the variable reference
    - name: Debug API key
      run: |
        echo "REACT_APP_GOOGLE_MAPS_API_KEY starts with: ${REACT_APP_GOOGLE_MAPS_API_KEY:0:4}..." >> debug.txt
      env:
        REACT_APP_GOOGLE_MAPS_API_KEY: ${{ secrets.REACT_APP_GOOGLE_MAPS_API_KEY }}
      
    # Build and push using Cloud Build - Change the substitution reference
    - name: Build and push to Artifact Registry
      run: |
        gcloud builds submit --project=${{ secrets.GCP_PROJECT_ID }} \
          --config=cloudbuild.yaml \
          --substitutions=_REACT_APP_GOOGLE_MAPS_API_KEY=${{ secrets.REACT_APP_GOOGLE_MAPS_API_KEY }},_AR_HOSTNAME=${{ env.AR_HOSTNAME }},_AR_REPOSITORY=${{ env.AR_REPOSITORY }},_SERVICE_NAME=${{ env.SERVICE_NAME }}
    
    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v1
      with:
        service: ${{ env.SERVICE_NAME }}
        region: ${{ env.REGION }}
        image: ${{ env.AR_HOSTNAME }}/${{ env.PROJECT_ID }}/${{ env.AR_REPOSITORY }}/${{ env.SERVICE_NAME }}:latest
        # No cache flag to ensure fresh deployment
        no-traffic: true
        
    - name: Migrate traffic to new revision
      run: |
        gcloud run services update-traffic ${{ env.SERVICE_NAME }} \
          --region=${{ env.REGION }} \
          --to-latest